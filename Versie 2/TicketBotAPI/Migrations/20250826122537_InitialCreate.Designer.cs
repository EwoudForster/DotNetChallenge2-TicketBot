// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketBotApi.Data;

#nullable disable

namespace TicketBotAPI.Migrations
{
    [DbContext(typeof(BotDbContext))]
    [Migration("20250826122537_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.36");

            modelBuilder.Entity("TicketBotApi.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Inception",
                            Rating = 9
                        },
                        new
                        {
                            Id = 2,
                            Name = "The Matrix",
                            Rating = 10
                        },
                        new
                        {
                            Id = 3,
                            Name = "Titanic",
                            Rating = 8
                        });
                });

            modelBuilder.Entity("TicketBotApi.Models.MovieHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MovieHalls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Hall A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hall B"
                        });
                });

            modelBuilder.Entity("TicketBotApi.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("MovieHallId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MovieHallId");

                    b.HasIndex("MovieId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 8, 26, 16, 25, 37, 636, DateTimeKind.Local).AddTicks(383),
                            MovieHallId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2025, 8, 26, 18, 25, 37, 636, DateTimeKind.Local).AddTicks(423),
                            MovieHallId = 2,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2025, 8, 26, 20, 25, 37, 636, DateTimeKind.Local).AddTicks(426),
                            MovieHallId = 1,
                            MovieId = 3
                        });
                });

            modelBuilder.Entity("TicketBotApi.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TicketBotApi.Models.Schedule", b =>
                {
                    b.HasOne("TicketBotApi.Models.MovieHall", "MovieHall")
                        .WithMany()
                        .HasForeignKey("MovieHallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketBotApi.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("MovieHall");
                });
#pragma warning restore 612, 618
        }
    }
}
